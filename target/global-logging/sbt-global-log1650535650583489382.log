[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\cliff\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\cliff\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 77.9248ms
[debug]       Load.loadUnit: defsScala took 0.2341ms
[debug] [Loading] Scanning directory C:\Users\cliff\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cliff\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.1329 ms
[debug]           Load.resolveProject(global-plugins) took 42.4314ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\cliff\.sbt\1.0\plugins, plugins: List(<none>))) took 88.2489ms
[debug] [Loading] Done in C:\Users\cliff\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 106.7505ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2062ms
[debug]     Load.loadUnit(file:/C:/Users/cliff/.sbt/1.0/plugins/, ...) took 192.3189ms
[debug]   Load.apply: load took 347.0323ms
[debug]   Load.apply: resolveProjects took 6.2443ms
[debug]   Load.apply: finalTransforms took 53.754ms
[debug]   Load.apply: config.delegates took 7.3007ms
[debug]   Load.apply: Def.make(settings)... took 658.7492ms
[debug]   Load.apply: structureIndex took 91.7921ms
[debug]   Load.apply: mkStreams took 1.4253ms
[info] loading global plugins from C:\Users\cliff\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5470.9244ms
[debug]           Load.loadUnit: plugins took 21.4838ms
[debug]           Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\cliff\OneDrive\Desktop\Scala\project
[debug]             Load.loadUnit: mkEval took 4.5136ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cliff\OneDrive\Desktop\Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6213 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 8.6588ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\cliff\OneDrive\Desktop\Scala\project, plugins: List(<none>))) took 10.8067ms
[debug] [Loading] Done in C:\Users\cliff\OneDrive\Desktop\Scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1942.8088ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.3035ms
[debug]         Load.loadUnit(file:/C:/Users/cliff/OneDrive/Desktop/Scala/project/, ...) took 1972.3512ms
[debug]       Load.apply: load took 1974.161ms
[debug]       Load.apply: resolveProjects took 0.1827ms
[debug]       Load.apply: finalTransforms took 12.3386ms
[debug]       Load.apply: config.delegates took 0.5036ms
[debug]       Load.apply: Def.make(settings)... took 78.8802ms
[debug]       Load.apply: structureIndex took 25.296ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\cliff\OneDrive\Desktop\Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2673.655ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\cliff\OneDrive\Desktop\Scala
[debug]       Load.loadUnit: mkEval took 0.1995ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cliff\OneDrive\Desktop\Scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.614 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 17.7783ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\Users\cliff\OneDrive\Desktop\Scala, plugins: List(<none>))) took 20.1542ms
[debug] [Loading] Done in C:\Users\cliff\OneDrive\Desktop\Scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 1239.8577ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.91ms
[debug]   Load.loadUnit(file:/C:/Users/cliff/OneDrive/Desktop/Scala/, ...) took 3937.051ms
[debug] Load.apply: load took 3938.6929ms
[debug] Load.apply: resolveProjects took 0.1464ms
[debug] Load.apply: finalTransforms took 22.9103ms
[debug] Load.apply: config.delegates took 0.3599ms
[debug] Load.apply: Def.make(settings)... took 76.5827ms
[debug] Load.apply: structureIndex took 17.8065ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to SparkScalaCourse (in build file:/C:/Users/cliff/OneDrive/Desktop/Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60686 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60686, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SparkScalaCourse (in build file:/C:/Users/cliff/OneDrive/Desktop/Scala/)
[debug] > Exec(idea-shell, None, None)
